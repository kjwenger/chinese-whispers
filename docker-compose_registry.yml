version: "3.2"

services:

# --- GRAYLOG ---

#    graylog.mongo:
#        image: "mongo:3"
#        container_name: graylog.mongo
#
#    graylog.elasticsearch:
#        image: "elasticsearch:2"
#        command: "elasticsearch -Des.cluster.name='graylog'"
#        container_name: graylog.elasticsearch
#
#    graylog:
#        build: ./graylog
#        container_name: graylog
#        depends_on:
#            - graylog.mongo
#            - graylog.elasticsearch
#        links:
#            - graylog.mongo:mongo
#            - graylog.elasticsearch:elasticsearch
#        ports:
#            - 9000:9000
##            - 12201/udp:12201/udp
#        environment:
#            GRAYLOG_PASSWORD_SECRET: somepasswordpepper
#            GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
#            GRAYLOG_WEB_ENDPOINT_URI: http://127.0.0.1:9000/api

# --- PROMETHEUS ---

    # prometheus:
    #     image: prom/prometheus
    # volumes:
    #     - ./prometheus/:/etc/prometheus/
    #     - prometheus_data:/prometheus
    # command:
    #     - "-config.file=/etc/prometheus/prometheus.yml"
    #     - "-storage.local.path=/prometheus"
    #     - "-web.console.libraries=/usr/share/prometheus/console_libraries"
    #     - "-web.console.templates=/usr/share/prometheus/consoles"
    # ports:
    #     - 9090:9090
    # restart: "always"

# --- CONSUL: Service Registry for Seneca.js Microservice Discoverability ---

    consul:
        image: progrium/consul
        ports:
            - 8400:8400
            - 8500:8500
            - 8600:53/udp
        container_name: "consul"
        restart: "on-failure"
        entrypoint: /bin/start -server -bootstrap

# --- CHINESE WHISPERS: Seneca.js Microservice Suite for the Chinese Whispers Game Implementation ---

    chinese_whispers.base:
        image: chinese_whispers/senecajs
        build:
            context: ./chinese_whispers.senecajs/
            dockerfile: docker/base/Dockerfile
        container_name: chinese_whispers.base
        depends_on:
            - consul
        links:
            - consul
        labels:
            description: "Return all the chained translation from one locale to another locale of a posted chinese whisper"
        ports:
            - 39002:39002
        restart: "on-failure"
        command: ["npm", "run", "start:base"]
        environment:
            DEBUG: ${DEBUG}
            SENECA_CONSUL_REGISTRY: |
                {
                    "host": "consul"
                }
            SENECA_MESH_ISBASE: 1
            SENECA_MESH_PORT: 39002

    chinese_whispers.translator.en-de:
        image: chinese_whispers/senecajs
        build: ./chinese_whispers.senecajs/
        container_name: chinese_whispers.translator.en-de
        depends_on:
            - consul
            - chinese_whispers.base
        links:
            - consul
            - chinese_whispers.base
        labels:
            description: "Return the translation from one locale to another locale of a posted chinese whisper"
        restart: "on-failure"
        command: ["npm", "run", "start:google"]
        environment:
            DEBUG: ${DEBUG}
            SENECA_CONSUL_REGISTRY: |
                {
                    "host": "consul"
                }
            SENECA_MESH_PIN: "cmd:translate,from:en,role:translator,to:de"

#    chinese_whispers.translator.de-fr:
#        image: chinese_whispers/senecajs
#        build: ./chinese_whispers.senecajs/
#        container_name: chinese_whispers.translator.de-fr
#        depends_on:
#            - consul
#            - chinese_whispers.base
#        links:
#            - consul
#            - chinese_whispers.base
#        labels:
#            description: "Return the translation from one locale to another locale of a posted chinese whisper"
#        restart: "on-failure"
#        command: ["npm", "run", "start:yandex"]
#        environment:
#            DEBUG: ${DEBUG}
#            SENECA_CONSUL_REGISTRY: |
#                {
#                    "host": "consul"
#                }
#            SENECA_MESH_PIN: "role:translator,cmd:translate,from:de,to:fr"
#            YANDEX_TRANSLATE_API_KEY: ${YANDEX_TRANSLATE_API_KEY}
#
#    chinese_whispers.conductor:
#        image: chinese_whispers/senecajs
#        build: ./chinese_whispers.senecajs/
#        container_name: chinese_whispers.conductor
#        depends_on:
#            - consul
#            - chinese_whispers.base
#        links:
#            - consul
#            - chinese_whispers.base
#        labels:
#            description: "Return all the chained translation from one locale to another locale of a posted chinese whisper"
#        ports:
#            - 8910:8910
#        restart: "on-failure"
#        command: ["npm", "run", "start:server"]
#        environment:
#            DEBUG: ${DEBUG}
#            PORT: 8910
#            SENECA_CONSUL_REGISTRY: |
#                {
#                    "host": "consul"
#                }
#            SENECA_MESH_ISBASE: 0
#            SENECA_MESH_PINS: |
#                [
#                    {
#                        "role": "conductor"
#                    }
#                ]
#            YANDEX_TRANSLATE_API_KEY: ${YANDEX_TRANSLATE_API_KEY}
#
#    chinese_whispers.translator:
#        image: chinese_whispers/senecajs
#        build: ./chinese_whispers.senecajs/
#        container_name: chinese_whispers.translator
#        depends_on:
#            - consul
#            - chinese_whispers.base
#        links:
#            - consul
#            - chinese_whispers.base
#        labels:
#            description: "Return all the chained translation from one locale to another locale of a posted chinese whisper"
#        ports:
#            - 8765:8765
#        restart: "on-failure"
#        command: ["npm", "run", "start:server"]
#        environment:
#            DEBUG: ${DEBUG}
#            PORT: 8765
#            SENECA_CONSUL_REGISTRY: |
#                {
#                    "host": "consul"
#                }
#            SENECA_MESH_ISBASE: 0
#            SENECA_MESH_PINS: |
#                [
#                    {
#                        "role": "translator"
#                    }
#                ]
#            YANDEX_TRANSLATE_API_KEY: ${YANDEX_TRANSLATE_API_KEY}

    chinese_whispers.api:
        image: chinese_whispers/senecajs
        build: ./chinese_whispers.senecajs/
        container_name: chinese_whispers.api
        depends_on:
            - consul
            - chinese_whispers.base
        links:
            - consul
            - chinese_whispers.base
        labels:
            description: "Return all the chained translation from one locale to another locale of a posted chinese whisper"
        ports:
            - 8765:8765
        restart: "on-failure"
        command: ["npm", "run", "start:api"]
        environment:
            DEBUG: ${DEBUG}
            PORT: 8765
            SENECA_CONSUL_REGISTRY: |
                {
                    "host": "consul"
                }

#    chinese_whispers.monitor:
#        image: chinese_whispers/senecajs
#        build: ./chinese_whispers.senecajs/
#        container_name: chinese_whispers.monitor
#        depends_on:
#            - consul
#            - chinese_whispers.base
#        links:
#            - consul
#            - chinese_whispers.base
#        labels:
#            description: "Monitors all chinese whisper services"
#        restart: "on-failure"
#        command: ["npm", "run", "start:monitor"]
#        environment:
#            DEBUG: ${DEBUG}
#            SENECA_CONSUL_REGISTRY: |
#                {
#                    "host": "consul"
#                }
