version: '2'

services:

#    graylog_mongo:
#        image: "mongo:3"
#        container_name: graylog_mongo
#
#    graylog_elasticsearch:
#        image: "elasticsearch:2"
#        command: "elasticsearch -Des.cluster.name='graylog'"
#        container_name: graylog_elasticsearch
#
#    graylog:
#        build: ./graylog
#        container_name: graylog
#        depends_on:
#            - graylog_mongo
#            - graylog_elasticsearch
#        links:
#            - graylog_mongo:mongo
#            - graylog_elasticsearch:elasticsearch
#        ports:
#            - "9000:9000"
#            - "12201/udp:12201/udp"
#        environment:
#            GRAYLOG_PASSWORD_SECRET: somepasswordpepper
#            GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
#            GRAYLOG_WEB_ENDPOINT_URI: http://127.0.0.1:9000/api

#docker service create --network n3 --replicas 1 --name base -e HOST=@eth0 -e REGISTRY='{"host": "127.0.0.1", "port": 8500}' mesh-base
#docker service create --network n3 --replicas 1 --name foo -e HOST=@eth0 -e REGISTRY='{"host": "127.0.0.1", "port": 8500}' mesh-foo
#docker service create --network n3 --replicas 1 --name bar -e HOST=@eth0 -e REGISTRY='{"host": "127.0.0.1", "port": 8500}' mesh-bar
#docker service create --network n3 --replicas 1 --name api -p 8080:8080 -e HOST=@eth2 -e REGISTRY='{"host": "127.0.0.1", "port": 8500}' mesh-api

    chinese_whispers.base:
        image: chinese_whispers/base
        build: ./chinese_whispers.senecajs/
        container_name: chinese_whispers.base
        labels:
            description: 'Return all the chained translation from one locale to another locale of a posted chinese whisper'
        ports:
            - '39999:39999'
            - '8500:8500'
        restart: 'no'
        command: ["npm", "run", "start:server"]
        environment:
            DEBUG: ${DEBUG}
            REGISTRY: '{"host": "127.0.0.1", "port": 8500}'
            SENECA_MESH_ISBASE: 1
            SENECA_MESH_PINS: '[]'

    chinese_whispers.conductor:
        image: chinese_whispers/conductor
        build: ./chinese_whispers.senecajs/
        container_name: chinese_whispers.conductor
        depends_on:
            - chinese_whispers.base
        links:
            - chinese_whispers.base
        labels:
            description: 'Return all the chained translation from one locale to another locale of a posted chinese whisper'
        ports:
            - '8910:8910'
        restart: 'no'
        command: ["npm", "run", "start:server"]
        environment:
            DEBUG: ${DEBUG}
            PORT: 8910
            REGISTRY: '{"host": "127.0.0.1", "port": 8500}'
            SENECA_MESH_ISBASE: 0
            SENECA_MESH_PINS: '[{"role": "conductor"}]'
            YANDEX_TRANSLATE_API_KEY: ${YANDEX_TRANSLATE_API_KEY}

    chinese_whispers.translator.en-de:
        image: chinese_whispers/translator.en-de
        build: ./chinese_whispers.senecajs/
        container_name: chinese_whispers.translator.en-de
        depends_on:
            - chinese_whispers.base
            - chinese_whispers.conductor
        links:
            - chinese_whispers.base
            - chinese_whispers.conductor
        labels:
            description: 'Return the translation from one locale to another locale of a posted chinese whisper'
        restart: 'no'
        command: ["npm", "run", "start:service"]
        environment:
            DEBUG: ${DEBUG}
            REGISTRY: '{"host": "127.0.0.1", "port": 8500}'
            SENECA_MESH_ISBASE: 0
            SENECA_MESH_PINS: '[{"role": "translator", "from": "en", "to": "de"}]'
            YANDEX_TRANSLATE_API_KEY: ${YANDEX_TRANSLATE_API_KEY}

    chinese_whispers.translator.de-fr:
        image: chinese_whispers/translator.de-fr
        build: ./chinese_whispers.senecajs/
        container_name: chinese_whispers.translator.de-fr
        depends_on:
            - chinese_whispers.base
            - chinese_whispers.conductor
        links:
            - chinese_whispers.base
            - chinese_whispers.conductor
        labels:
            description: 'Return the translation from one locale to another locale of a posted chinese whisper'
        restart: 'no'
        command: ["npm", "run", "start:service"]
        environment:
            DEBUG: ${DEBUG}
            REGISTRY: '{"host": "127.0.0.1", "port": 8500}'
            SENECA_MESH_ISBASE: 0
            SENECA_MESH_PINS: '[{"role": "translator", "from": "de", "to": "fr", "provider": "liar"}]'
            YANDEX_TRANSLATE_API_KEY: ${YANDEX_TRANSLATE_API_KEY}

    chinese_whispers.monitor:
        image: chinese_whispers/monitor
        build: ./chinese_whispers.senecajs/
        container_name: chinese_whispers.monitor
        labels:
            description: 'Monitors all chinese whisper services'
        depends_on:
            - chinese_whispers.base
            - chinese_whispers.conductor
            - chinese_whispers.translator.en-de
            - chinese_whispers.translator.de-fr
        links:
            - chinese_whispers.base
            - chinese_whispers.conductor
            - chinese_whispers.translator.en-de
            - chinese_whispers.translator.de-fr
        restart: 'on-failure'
        command: ["npm", "run", "start:monitor"]
        environment:
            DEBUG: ${DEBUG}
            REGISTRY: '{"host": "127.0.0.1", "port": 8500}'
